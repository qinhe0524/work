<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:dataSource.properties" />

	<!-- c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}"/>
		<!-- C3P0 Connection Pool -->
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
	
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />	
	    <property name="configLocation">  
            <value>classpath:com/xk/sqlmapper/sqlMapConfig.xml</value>  
        </property>  
	</bean>
	
	 <bean id="sqlSession"  class="org.mybatis.spring.SqlSessionTemplate"> 	   
		 <constructor-arg index="0" ref="sqlSessionFactory" /> 			  
	 </bean> 
	 
	  <!--注入SqlSessionTemplate实例 -->    
	 <bean id="baseDaoImpl" class="com.xk.dao.impl.BaseDaoImpl">
	 	<property name="sqlSessionTemplate" ref="sqlSession" />
	 </bean>   
	 

	
	<!-- 可通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper MapperScanner配置.自动去搜索mapper里的对象,并注入.-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xk.dao.*" />
	</bean>
	
	
	<!-- 设置SPRING AOP动态捕获异常 1设定为自动代理 2负责记录有异常发生时的信息 3 对指定类的任何方法有效 -->
	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	<bean id="exceptionHandler" class="com.xk.util.AopExceptionHandler" />
	<!-- 这里配置切入点，可以为正则表达式 .*DAOImpl\.delete.* -->
	<bean id="exceptionHandlereAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="exceptionHandler" />
		</property>
		<property name="patterns">
			<list>
				<!-- 切入包名中含impl字符的类主要为了捕获实现接口的类 -->
				<value>.*Controller*.*</value>
			</list>
		</property>
	</bean>
	
	<!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>  
</beans>